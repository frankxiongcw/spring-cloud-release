<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.core.dao.base.ProductSupplierMapper">
  <resultMap id="BaseResultMap" type="com.frank.core.entity.ProductSupplier">
    <id column="supplier_id" jdbcType="BIGINT" property="supplierId" />
    <result column="supplier_type" jdbcType="INTEGER" property="supplierType" />
    <result column="supplier_name" jdbcType="VARCHAR" property="supplierName" />
    <result column="supplier_address" jdbcType="VARCHAR" property="supplierAddress" />
    <result column="address_code" jdbcType="VARCHAR" property="addressCode" />
    <result column="supplier_img" jdbcType="VARCHAR" property="supplierImg" />
    <result column="supplier_description" jdbcType="VARCHAR" property="supplierDescription" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    supplier_id, supplier_type, supplier_name, supplier_address, address_code, supplier_img, 
    supplier_description, status, del_flag, create_time, create_by, creator, update_time, 
    update_by, updater
  </sql>
  <select id="selectByExample" parameterType="com.frank.core.entity.ProductSupplierExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_product_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_product_supplier
    where supplier_id = #{supplierId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_product_supplier
    where supplier_id = #{supplierId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.frank.core.entity.ProductSupplierExample">
    delete from tb_product_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="supplierId" parameterType="com.frank.core.entity.ProductSupplier" useGeneratedKeys="true">
    insert into tb_product_supplier (supplier_id, supplier_type, supplier_name, 
      supplier_address, address_code, supplier_img, 
      supplier_description, status, del_flag, 
      create_time, create_by, creator, 
      update_time, update_by, updater
      )
    values (#{supplierId,jdbcType=BIGINT}, #{supplierType,jdbcType=INTEGER}, #{supplierName,jdbcType=VARCHAR}, 
      #{supplierAddress,jdbcType=VARCHAR}, #{addressCode,jdbcType=VARCHAR}, #{supplierImg,jdbcType=VARCHAR}, 
      #{supplierDescription,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{delFlag,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updater,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyProperty="supplierId" parameterType="com.frank.core.entity.ProductSupplier" useGeneratedKeys="true">
    insert into tb_product_supplier
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="supplierType != null">
        supplier_type,
      </if>
      <if test="supplierName != null">
        supplier_name,
      </if>
      <if test="supplierAddress != null">
        supplier_address,
      </if>
      <if test="addressCode != null">
        address_code,
      </if>
      <if test="supplierImg != null">
        supplier_img,
      </if>
      <if test="supplierDescription != null">
        supplier_description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updater != null">
        updater,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="supplierId != null">
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierType != null">
        #{supplierType,jdbcType=INTEGER},
      </if>
      <if test="supplierName != null">
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierAddress != null">
        #{supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="addressCode != null">
        #{addressCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierImg != null">
        #{supplierImg,jdbcType=VARCHAR},
      </if>
      <if test="supplierDescription != null">
        #{supplierDescription,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.frank.core.entity.ProductSupplierExample" resultType="java.lang.Long">
    select count(*) from tb_product_supplier
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_product_supplier
    <set>
      <if test="record.supplierId != null">
        supplier_id = #{record.supplierId,jdbcType=BIGINT},
      </if>
      <if test="record.supplierType != null">
        supplier_type = #{record.supplierType,jdbcType=INTEGER},
      </if>
      <if test="record.supplierName != null">
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierAddress != null">
        supplier_address = #{record.supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.addressCode != null">
        address_code = #{record.addressCode,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierImg != null">
        supplier_img = #{record.supplierImg,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierDescription != null">
        supplier_description = #{record.supplierDescription,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updater != null">
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_product_supplier
    set supplier_id = #{record.supplierId,jdbcType=BIGINT},
      supplier_type = #{record.supplierType,jdbcType=INTEGER},
      supplier_name = #{record.supplierName,jdbcType=VARCHAR},
      supplier_address = #{record.supplierAddress,jdbcType=VARCHAR},
      address_code = #{record.addressCode,jdbcType=VARCHAR},
      supplier_img = #{record.supplierImg,jdbcType=VARCHAR},
      supplier_description = #{record.supplierDescription,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      del_flag = #{record.delFlag,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      updater = #{record.updater,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.frank.core.entity.ProductSupplier">
    update tb_product_supplier
    <set>
      <if test="supplierType != null">
        supplier_type = #{supplierType,jdbcType=INTEGER},
      </if>
      <if test="supplierName != null">
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="supplierAddress != null">
        supplier_address = #{supplierAddress,jdbcType=VARCHAR},
      </if>
      <if test="addressCode != null">
        address_code = #{addressCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierImg != null">
        supplier_img = #{supplierImg,jdbcType=VARCHAR},
      </if>
      <if test="supplierDescription != null">
        supplier_description = #{supplierDescription,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
    </set>
    where supplier_id = #{supplierId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.frank.core.entity.ProductSupplier">
    update tb_product_supplier
    set supplier_type = #{supplierType,jdbcType=INTEGER},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      supplier_address = #{supplierAddress,jdbcType=VARCHAR},
      address_code = #{addressCode,jdbcType=VARCHAR},
      supplier_img = #{supplierImg,jdbcType=VARCHAR},
      supplier_description = #{supplierDescription,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      updater = #{updater,jdbcType=VARCHAR}
    where supplier_id = #{supplierId,jdbcType=BIGINT}
  </update>
</mapper>