<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frank.core.dao.base.ImportClearanceInfoMapper">
  <resultMap id="BaseResultMap" type="com.frank.core.entity.ImportClearanceInfo">
    <id column="info_id" jdbcType="BIGINT" property="infoId" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="batch_no" jdbcType="VARCHAR" property="batchNo" />
    <result column="domestic_consignee" jdbcType="VARCHAR" property="domesticConsignee" />
    <result column="consumption_unit" jdbcType="VARCHAR" property="consumptionUnit" />
    <result column="entry_customs" jdbcType="VARCHAR" property="entryCustoms" />
    <result column="transport_mode" jdbcType="VARCHAR" property="transportMode" />
    <result column="entry_time" jdbcType="TIMESTAMP" property="entryTime" />
    <result column="declare_time" jdbcType="TIMESTAMP" property="declareTime" />
    <result column="cargo_storage_location" jdbcType="VARCHAR" property="cargoStorageLocation" />
    <result column="departure_country" jdbcType="VARCHAR" property="departureCountry" />
    <result column="stop_port" jdbcType="VARCHAR" property="stopPort" />
    <result column="entry_port" jdbcType="VARCHAR" property="entryPort" />
    <result column="declare_unit" jdbcType="VARCHAR" property="declareUnit" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="updater" jdbcType="VARCHAR" property="updater" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    info_id, product_id, batch_no, domestic_consignee, consumption_unit, entry_customs, 
    transport_mode, entry_time, declare_time, cargo_storage_location, departure_country, 
    stop_port, entry_port, declare_unit, del_flag, create_time, create_by, creator, update_time, 
    update_by, updater
  </sql>
  <select id="selectByExample" parameterType="com.frank.core.entity.ImportClearanceInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_import_clearance_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_import_clearance_info
    where info_id = #{infoId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_import_clearance_info
    where info_id = #{infoId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.frank.core.entity.ImportClearanceInfoExample">
    delete from tb_import_clearance_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyProperty="infoId" parameterType="com.frank.core.entity.ImportClearanceInfo" useGeneratedKeys="true">
    insert into tb_import_clearance_info (info_id, product_id, batch_no, 
      domestic_consignee, consumption_unit, entry_customs, 
      transport_mode, entry_time, declare_time, 
      cargo_storage_location, departure_country, 
      stop_port, entry_port, declare_unit, 
      del_flag, create_time, create_by, 
      creator, update_time, update_by, 
      updater)
    values (#{infoId,jdbcType=BIGINT}, #{productId,jdbcType=BIGINT}, #{batchNo,jdbcType=VARCHAR}, 
      #{domesticConsignee,jdbcType=VARCHAR}, #{consumptionUnit,jdbcType=VARCHAR}, #{entryCustoms,jdbcType=VARCHAR}, 
      #{transportMode,jdbcType=VARCHAR}, #{entryTime,jdbcType=TIMESTAMP}, #{declareTime,jdbcType=TIMESTAMP}, 
      #{cargoStorageLocation,jdbcType=VARCHAR}, #{departureCountry,jdbcType=VARCHAR}, 
      #{stopPort,jdbcType=VARCHAR}, #{entryPort,jdbcType=VARCHAR}, #{declareUnit,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updater,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyProperty="infoId" parameterType="com.frank.core.entity.ImportClearanceInfo" useGeneratedKeys="true">
    insert into tb_import_clearance_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="infoId != null">
        info_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="batchNo != null">
        batch_no,
      </if>
      <if test="domesticConsignee != null">
        domestic_consignee,
      </if>
      <if test="consumptionUnit != null">
        consumption_unit,
      </if>
      <if test="entryCustoms != null">
        entry_customs,
      </if>
      <if test="transportMode != null">
        transport_mode,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="declareTime != null">
        declare_time,
      </if>
      <if test="cargoStorageLocation != null">
        cargo_storage_location,
      </if>
      <if test="departureCountry != null">
        departure_country,
      </if>
      <if test="stopPort != null">
        stop_port,
      </if>
      <if test="entryPort != null">
        entry_port,
      </if>
      <if test="declareUnit != null">
        declare_unit,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updater != null">
        updater,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="infoId != null">
        #{infoId,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="batchNo != null">
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="domesticConsignee != null">
        #{domesticConsignee,jdbcType=VARCHAR},
      </if>
      <if test="consumptionUnit != null">
        #{consumptionUnit,jdbcType=VARCHAR},
      </if>
      <if test="entryCustoms != null">
        #{entryCustoms,jdbcType=VARCHAR},
      </if>
      <if test="transportMode != null">
        #{transportMode,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="declareTime != null">
        #{declareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cargoStorageLocation != null">
        #{cargoStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="departureCountry != null">
        #{departureCountry,jdbcType=VARCHAR},
      </if>
      <if test="stopPort != null">
        #{stopPort,jdbcType=VARCHAR},
      </if>
      <if test="entryPort != null">
        #{entryPort,jdbcType=VARCHAR},
      </if>
      <if test="declareUnit != null">
        #{declareUnit,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        #{updater,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.frank.core.entity.ImportClearanceInfoExample" resultType="java.lang.Long">
    select count(*) from tb_import_clearance_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_import_clearance_info
    <set>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=BIGINT},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=BIGINT},
      </if>
      <if test="record.batchNo != null">
        batch_no = #{record.batchNo,jdbcType=VARCHAR},
      </if>
      <if test="record.domesticConsignee != null">
        domestic_consignee = #{record.domesticConsignee,jdbcType=VARCHAR},
      </if>
      <if test="record.consumptionUnit != null">
        consumption_unit = #{record.consumptionUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.entryCustoms != null">
        entry_customs = #{record.entryCustoms,jdbcType=VARCHAR},
      </if>
      <if test="record.transportMode != null">
        transport_mode = #{record.transportMode,jdbcType=VARCHAR},
      </if>
      <if test="record.entryTime != null">
        entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.declareTime != null">
        declare_time = #{record.declareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cargoStorageLocation != null">
        cargo_storage_location = #{record.cargoStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.departureCountry != null">
        departure_country = #{record.departureCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.stopPort != null">
        stop_port = #{record.stopPort,jdbcType=VARCHAR},
      </if>
      <if test="record.entryPort != null">
        entry_port = #{record.entryPort,jdbcType=VARCHAR},
      </if>
      <if test="record.declareUnit != null">
        declare_unit = #{record.declareUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null">
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null">
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updater != null">
        updater = #{record.updater,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_import_clearance_info
    set info_id = #{record.infoId,jdbcType=BIGINT},
      product_id = #{record.productId,jdbcType=BIGINT},
      batch_no = #{record.batchNo,jdbcType=VARCHAR},
      domestic_consignee = #{record.domesticConsignee,jdbcType=VARCHAR},
      consumption_unit = #{record.consumptionUnit,jdbcType=VARCHAR},
      entry_customs = #{record.entryCustoms,jdbcType=VARCHAR},
      transport_mode = #{record.transportMode,jdbcType=VARCHAR},
      entry_time = #{record.entryTime,jdbcType=TIMESTAMP},
      declare_time = #{record.declareTime,jdbcType=TIMESTAMP},
      cargo_storage_location = #{record.cargoStorageLocation,jdbcType=VARCHAR},
      departure_country = #{record.departureCountry,jdbcType=VARCHAR},
      stop_port = #{record.stopPort,jdbcType=VARCHAR},
      entry_port = #{record.entryPort,jdbcType=VARCHAR},
      declare_unit = #{record.declareUnit,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      updater = #{record.updater,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.frank.core.entity.ImportClearanceInfo">
    update tb_import_clearance_info
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="batchNo != null">
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="domesticConsignee != null">
        domestic_consignee = #{domesticConsignee,jdbcType=VARCHAR},
      </if>
      <if test="consumptionUnit != null">
        consumption_unit = #{consumptionUnit,jdbcType=VARCHAR},
      </if>
      <if test="entryCustoms != null">
        entry_customs = #{entryCustoms,jdbcType=VARCHAR},
      </if>
      <if test="transportMode != null">
        transport_mode = #{transportMode,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="declareTime != null">
        declare_time = #{declareTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cargoStorageLocation != null">
        cargo_storage_location = #{cargoStorageLocation,jdbcType=VARCHAR},
      </if>
      <if test="departureCountry != null">
        departure_country = #{departureCountry,jdbcType=VARCHAR},
      </if>
      <if test="stopPort != null">
        stop_port = #{stopPort,jdbcType=VARCHAR},
      </if>
      <if test="entryPort != null">
        entry_port = #{entryPort,jdbcType=VARCHAR},
      </if>
      <if test="declareUnit != null">
        declare_unit = #{declareUnit,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updater != null">
        updater = #{updater,jdbcType=VARCHAR},
      </if>
    </set>
    where info_id = #{infoId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.frank.core.entity.ImportClearanceInfo">
    update tb_import_clearance_info
    set product_id = #{productId,jdbcType=BIGINT},
      batch_no = #{batchNo,jdbcType=VARCHAR},
      domestic_consignee = #{domesticConsignee,jdbcType=VARCHAR},
      consumption_unit = #{consumptionUnit,jdbcType=VARCHAR},
      entry_customs = #{entryCustoms,jdbcType=VARCHAR},
      transport_mode = #{transportMode,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=TIMESTAMP},
      declare_time = #{declareTime,jdbcType=TIMESTAMP},
      cargo_storage_location = #{cargoStorageLocation,jdbcType=VARCHAR},
      departure_country = #{departureCountry,jdbcType=VARCHAR},
      stop_port = #{stopPort,jdbcType=VARCHAR},
      entry_port = #{entryPort,jdbcType=VARCHAR},
      declare_unit = #{declareUnit,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      updater = #{updater,jdbcType=VARCHAR}
    where info_id = #{infoId,jdbcType=BIGINT}
  </update>
</mapper>